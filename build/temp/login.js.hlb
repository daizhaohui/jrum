(function($) {
    var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        a256 = '',
        r64 = [256],
        r256 = [256],
        i = 0;

    var UTF8 = {
        encode: function(strUni) {
            var strUtf = strUni.replace(/[\u0080-\u07ff]/g, // U+0080 - U+07FF => 2 bytes 110yyyyy, 10zzzzzz
                function(c) {
                    var cc = c.charCodeAt(0);
                    return String.fromCharCode(0xc0 | cc >> 6, 0x80 | cc & 0x3f);
                })
                .replace(/[\u0800-\uffff]/g, // U+0800 - U+FFFF => 3 bytes 1110xxxx, 10yyyyyy, 10zzzzzz
                    function(c) {
                        var cc = c.charCodeAt(0);
                        return String.fromCharCode(0xe0 | cc >> 12, 0x80 | cc >> 6 & 0x3F, 0x80 | cc & 0x3f);
                    });
            return strUtf;
        },
        decode: function(strUtf) {
            // note: decode 3-byte chars first as decoded 2-byte strings could appear to be 3-byte char!
            var strUni = strUtf.replace(/[\u00e0-\u00ef][\u0080-\u00bf][\u0080-\u00bf]/g, // 3-byte chars
                function(c) { // (note parentheses for precence)
                    var cc = ((c.charCodeAt(0) & 0x0f) << 12) | ((c.charCodeAt(1) & 0x3f) << 6) | (c.charCodeAt(2) & 0x3f);
                    return String.fromCharCode(cc);
                })
                .replace(/[\u00c0-\u00df][\u0080-\u00bf]/g, // 2-byte chars
                    function(c) { // (note parentheses for precence)
                        var cc = (c.charCodeAt(0) & 0x1f) << 6 | c.charCodeAt(1) & 0x3f;
                        return String.fromCharCode(cc);
                    });
            return strUni;
        }
    };

    while(i < 256) {
        var c = String.fromCharCode(i);
        a256 += c;
        r256[i] = i;
        r64[i] = b64.indexOf(c);
        ++i;
    }

    function code(s, discard, alpha, beta, w1, w2) {
        s = String(s);
        var buffer = 0,
            i = 0,
            length = s.length,
            result = '',
            bitsInBuffer = 0;

        while(i < length) {
            var c = s.charCodeAt(i);
            c = c < 256 ? alpha[c] : -1;

            buffer = (buffer << w1) + c;
            bitsInBuffer += w1;

            while(bitsInBuffer >= w2) {
                bitsInBuffer -= w2;
                var tmp = buffer >> bitsInBuffer;
                result += beta.charAt(tmp);
                buffer ^= tmp << bitsInBuffer;
            }
            ++i;
        }
        if(!discard && bitsInBuffer > 0) result += beta.charAt(buffer << (w2 - bitsInBuffer));
        return result;
    }

    var Plugin = $.base64 = function(dir, input, encode) {
        return input ? Plugin[dir](input, encode) : dir ? null : this;
    };

    Plugin.btoa = Plugin.encode = function(plain, utf8encode) {
        plain = Plugin.raw === false || Plugin.utf8encode || utf8encode ? UTF8.encode(plain) : plain;
        plain = code(plain, false, r256, b64, 8, 6);
        return plain + '===='.slice((plain.length % 4) || 4);
    };

    Plugin.atob = Plugin.decode = function(coded, utf8decode) {
        coded = coded.replace(/[^A-Za-z0-9\+\/\=]/g, "");
        coded = String(coded).split('=');
        var i = coded.length;
        do {--i;
            coded[i] = code(coded[i], true, r64, a256, 6, 8);
        } while (i > 0);
        coded = coded.join('');
        return Plugin.raw === false || Plugin.utf8decode || utf8decode ? UTF8.decode(coded) : coded;
    };
}(jQuery));

$(document).ready(function(){

    var $errUserName     = $("#errUserName"),
        $errPassword     = $("#errPassword"),
        $loginButton     = $("#loginButton"),
        $uName           = $(".user-name"),
        $pwd             = $(".user-password");
        $chkPwd          = $(".pwdManage input[type='checkbox']")


    var loginPlugin = (function(){

        {{{plugin_loginjs}}}

        return {
            verifyName:verifyName,
            verifyPassword:verifyPassword,
            verifyUser:verifyUser
        }
    })();

    loginPlugin.saveUerInfo = function(userInfo) {
        var str = JSON.stringify(userInfo);
        localStorage.setItem("ls_userinfo",$.base64.encode(str));
    };

    loginPlugin.getUserInfo = function() {
        var userInfo = localStorage.getItem("ls_userinfo");
        if(userInfo) {
            try{
                userInfo = $.base64.decode(userInfo)
                userInfo = JSON.parse(userInfo);
                return userInfo;
            }
            catch(e){
                return null;
            }
        }
        return null;
    };


    $(window).on("load",function(){
        $uName.val('');
        $pwd.val('');
        setLoginButton();
    });


    document.oncontextmenu = function () {
        return false
    };

    function setLoginButton(isEnabled) {

        if(isEmpty($uName.val()) || isEmpty($pwd.val())) {
            enableLoginButton(false);
        } else {
            if(arguments.length>0) {
                enableLoginButton(isEnabled);
            } else {
                enableLoginButton(true);
            }

        }

    }

    function isEmpty(str) {
        return str.replace(/(^\s*)|(\s*$)/g, "").length === 0;
    }

    function enableLoginButton(enabled) {

        if(enabled) {
            $loginButton.removeClass("disable");
            $loginButton.addClass("active");
        } else {
            $loginButton.removeClass("active");
            $loginButton.addClass("disable");
        }

    }

    $uName.on("input",function() {
        setLoginButton();
    });

    $pwd.on("input",function() {
        setLoginButton();
    });

    $uName.on("change",function(){

        var $this       = $(this),
            userName    = $this.val();

        if(isEmpty(userName)) {
            $errUserName.html("请输入用户名！");
            setLoginButton();
        } else {
            if(loginPlugin.verifyName) {
                loginPlugin.verifyName(userName,function(data){
                    if(data.passed) {
                        $errUserName.html("");
                        setLoginButton(true);
                    } else {
                        $errUserName.html(data.message);
                        enableLoginButton(false);
                    }
                });
            } else {
                $errUserName.html("");
                setLoginButton();
            }
        }

    });

    $pwd.on("change",function(){

        var $this       = $(this),
            password    = $this.val();

        if(isEmpty(password)) {
            $errPassword.html('请输入密码！');
            setLoginButton();
        }
        else {
            if(loginPlugin.verifyPassword) {
                loginPlugin.verifyPassword(password,function(data){
                    if(data.passed) {
                        $errPassword.html("");
                        setLoginButton(true);
                    } else {
                        $errPassword.html(data.message);
                        enableLoginButton(false);
                    }
                });
            } else {
                $errPassword.html("");
                setLoginButton();
            }
        }
    });

    $loginButton.click(function(){
        var $this      = $(this);
        if(loginPlugin.verifyUser) {
            loginPlugin.verifyUser($uName.val(),$pwd.val(),function(data){
                if(data.passed) {
                    data.userData.rememberPassword = ($chkPwd.val()==='true');
                    loginPlugin.saveUerInfo(data.userData);
                    window.location.href = "index.html";
                } else {
                    $errPassword.html(data.message);
                    setLoginButton(false);
                }
            });
        }
    });
    var userInfo = loginPlugin.getUserInfo();
    if(userInfo && userInfo.rememberPassword && userInfo.rememberPassword===true) {
        document.getElementById("userName").value = userInfo.userName;
        document.getElementById("password").value = userInfo.password;
        $chkPwd.attr("checked",true);
        setLoginButton(true);
    } else {
        if(userInfo&&userInfo.userName){
            document.getElementById("userName").value = userInfo.userName;
        }
        document.getElementById("password").value = "";
        $chkPwd.attr("checked",false);
        setLoginButton(false);
    }

});